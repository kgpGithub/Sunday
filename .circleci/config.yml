# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, Prasad World!"                   
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
  one:
    docker:
      - image: cimg/ruby:3.0.2
        auth:
          username: kgp007
          password: Mydocker@2021  # context / project UI env-var reference
    steps:
      - checkout
      - run: echo "my first hello"
      - run: mkdir -p my_workspace
      - run: echo "Trying out workspaces" > my_workspace/echo-output
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory
          root: my_workspace
          # Must be relative path from root
          paths:
            - echo-output
  two:
    docker:
      - image: cimg/ruby:3.0.2
        auth:
          username: kgp007
          password: Mydocker@2021  # context / project UI env-var reference
    steps:
      - checkout
      - run: echo "A more familiar hi from two"
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: my_workspace

      - run: |
          if [[ $(cat my_workspace/echo-output) == "Trying out workspaces" ]]; then
            echo "It worked!";
          else
            echo "Nope!"; exit 1
          fi
  build:
    docker:
      - image: cimg/python:3.6.2
        auth:
          username: kgp007
          password: Mydocker@2021  # context / project UI env-var reference
        environment:
          FLASK_CONFIG: testing
          TEST_DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
      - image: cimg/postgres:14.2
        auth:
          username: kgp007
          password: Mydocker@2021  # context / project UI env-var reference
        environment:
          POSTGRES_USER: testuser
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
          
    steps:
      - checkout
      - run:
          name: Install Python deps in a venv
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements/dev.txt
     
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
  one_and_two:
    jobs:
      - one
      - two:
          requires:
            - one
  Prasad-flow:
    jobs:
      - build
 
